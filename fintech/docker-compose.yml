version: '3'

services:

  client1:
    container_name: "client1"
    restart: on-failure:3
    build:
      context: ./react-client
      dockerfile: Dockerfile
    ports:
      - "${REACT_FINTECH1_PORT}:${REACT_FINTECH1_PORT}"
    environment:
      - PORT=${REACT_FINTECH1_PORT}
    depends_on:
      - server1

  server1:
    container_name: "server1"
    restart: on-failure:3
    volumes:
      - ./rest-server:/app
    build:
      context: ./rest-server
      dockerfile: Dockerfile
    ports:
      - "${REST_SERVER_FINTECH1_PORT}:${REST_SERVER_FINTECH1_PORT}"
    environment:
      - MONGO_URI=${MONGODB_URL}
      - RABBITMQ_URL=${RABBITMQ_URL}
      - APP_NAME=${FINTECH1_NAME}
      - PORT=${REST_SERVER_FINTECH1_PORT}
      - SECRET_KEY=chavebemsecreta
    depends_on:
      mongo:
        condition: service_healthy

  mongo:
    container_name: "mongo_fintech"
    restart: on-failure:3
    image: mongo:latest
    ports:
      - "${MONGODB1_PORT}:${MONGODB1_PORT}"
    volumes:
      - mongo_data:/data/db
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGODB_PASSWORD}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGODB_PASSWORD}
      - MONGO_INITDB_DATABASE=${MONGODB_PASSWORD}
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/test --quiet
      interval: 2s
      timeout: 3s
      retries: 10

volumes:
  mongo_data: